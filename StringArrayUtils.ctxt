#BlueJ class context
comment0.target=StringArrayUtils
comment0.text=\r\n\ Created\ by\ Yang\ on\ 1/23/20.\r\n
comment1.params=array
comment1.target=java.lang.String\ getFirstElement(java.lang.String[])
comment1.text=\r\n\ @param\ array\ array\ of\ String\ objects\r\n\ @return\ first\ element\ of\ specified\ array\r\n
comment10.params=array\ valueToRemove
comment10.target=java.lang.String[]\ removeValue(java.lang.String[],\ java.lang.String)
comment10.text=\r\n\ @param\ array\ \ \ \ \ \ \ \ \ array\ of\ String\ objects\r\n\ @param\ valueToRemove\ value\ to\ remove\ from\ array\r\n\ @return\ array\ with\ identical\ contents\ excluding\ values\ of\ `value`\r\n
comment11.params=array
comment11.target=java.lang.String[]\ removeConsecutiveDuplicates(java.lang.String[])
comment11.text=\r\n\ @param\ array\ array\ of\ chars\r\n\ @return\ array\ of\ Strings\ with\ consecutive\ duplicates\ removes\r\n
comment12.params=array
comment12.target=java.lang.String[]\ packConsecutiveDuplicates(java.lang.String[])
comment12.text=\r\n\ @param\ array\ array\ of\ chars\r\n\ @return\ array\ of\ Strings\ with\ each\ consecutive\ duplicate\ occurrence\ concatenated\ as\ a\ single\ string\ in\ an\ array\ of\ Strings\r\n
comment13.params=array\ left\ right
comment13.target=void\ swap(java.lang.String[],\ int,\ int)
comment2.params=array
comment2.target=java.lang.String\ getSecondElement(java.lang.String[])
comment2.text=\r\n\ @param\ array\ array\ of\ String\ objects\r\n\ @return\ second\ element\ in\ specified\ array\r\n
comment3.params=array
comment3.target=java.lang.String\ getLastElement(java.lang.String[])
comment3.text=\r\n\ @param\ array\ array\ of\ String\ objects\r\n\ @return\ last\ element\ in\ specified\ array\r\n
comment4.params=array
comment4.target=java.lang.String\ getSecondToLastElement(java.lang.String[])
comment4.text=\r\n\ @param\ array\ array\ of\ String\ objects\r\n\ @return\ second\ to\ last\ element\ in\ specified\ array\r\n
comment5.params=array\ value
comment5.target=boolean\ contains(java.lang.String[],\ java.lang.String)
comment5.text=\r\n\ @param\ array\ array\ of\ String\ objects\r\n\ @param\ value\ value\ to\ check\ array\ for\r\n\ @return\ true\ if\ the\ array\ contains\ the\ specified\ `value`\r\n
comment6.params=array
comment6.target=java.lang.String[]\ reverse(java.lang.String[])
comment6.text=\r\n\ @param\ array\ of\ String\ objects\r\n\ @return\ an\ array\ with\ identical\ contents\ in\ reverse\ order\r\n
comment7.params=array
comment7.target=boolean\ isPalindromic(java.lang.String[])
comment7.text=\r\n\ @param\ array\ array\ of\ String\ objects\r\n\ @return\ true\ if\ the\ order\ of\ the\ array\ is\ the\ same\ backwards\ and\ forwards\r\n
comment8.params=array
comment8.target=boolean\ isPangramic(java.lang.String[])
comment8.text=\r\n\ @param\ array\ array\ of\ String\ objects\r\n\ @return\ true\ if\ each\ letter\ in\ the\ alphabet\ has\ been\ used\ in\ the\ array\r\n
comment9.params=array\ value
comment9.target=int\ getNumberOfOccurrences(java.lang.String[],\ java.lang.String)
comment9.text=\r\n\ @param\ array\ array\ of\ String\ objects\r\n\ @param\ value\ value\ to\ check\ array\ for\r\n\ @return\ number\ of\ occurrences\ the\ specified\ `value`\ has\ occurred\r\n
numComments=14
